{
	"success": "true",
	"data": {
		"author": "abcd",
		"bio": "this is abcd",
		"portrait": "./img/portrait/portrait.png",
		"title": "This is the title",
		"createtime": "2016/06/11",
		"content": "<p>This is a passage paragraph</p><p>This is a passage paragraph</p><p>This is a passage paragraph</p><code>/**\r\n * @param {number[]} nums\r\n * @param {number} target\r\n * @return {number[]}\r\n */\r\nvar twoSum = function(nums, target) {\r\n    var length = nums.length;\r\n    var rest = 0;\r\n    var sortedNums = nums.slice(0);\r\n    heapSort(sortedNums, sortedNums.length);\r\n    console.log(sortedNums);\r\n    for(var index1 = 0, index2 = -1; index1 <length-1; index1++) {\r\n        rest = target - sortedNums[index1];\r\n        index2 = binarySearch(sortedNums, rest, index1+1, length-1);\r\n        if(index2 !== -1) break;\r\n    }\r\n    for (var i = 0; i < nums.length; i++) {\r\n        if(nums[i] === sortedNums[index1]) {\r\n            index1 = i;\r\n            break;\r\n        }\r\n    }\r\n    for (i = 0; i < nums.length; i++) {\r\n        if(nums[i] === sortedNums[index2] && i !== index1) {\r\n            index2 = i;\r\n            break;\r\n        }\r\n    }\r\n    return index1<index2?[index1+1, index2+1]:[index2+1,index1+1];\r\n};\r\nvar heapSort = function(array, heapSize) {\r\n    buidMaxHeap(array);\r\n    for (var i = heapSize-1; i > 0; i--) {\r\n        exchangePosition(0, i, array);\r\n        heapSize--;\r\n        maxHeapify(array, 0, heapSize);\r\n    }\r\n};\r\nvar buidMaxHeap = function(array) {\r\n    var start = Math.floor(array.length/2)-1;\r\n    for (var i = start; i > -1; i--) {\r\n        maxHeapify(array, i, array.length);\r\n    }\r\n};\r\nvar maxHeapify = function(array, index, heapSize) {\r\n    var largest = index;\r\n    var left = 2*index+1;\r\n    var right = left+1;\r\n    if (array[index] < array[left] && left <= heapSize-1) {\r\n        largest = left;\r\n    }\r\n    if(array[largest] < array[right] && right <= heapSize-1) {\r\n        largest = right;\r\n    }\r\n    if (largest == index) return;\r\n    exchangePosition(index, largest, array);\r\n    return maxHeapify(array, largest, heapSize);\r\n};\r\nvar exchangePosition = function(index1, index2, array) {\r\n    var temp = array[index1];\r\n    array[index1] = array[index2];\r\n    array[index2] = temp;\r\n};\r\nvar binarySearch = function(array, target, start, end) {\r\n    if (end < 0 || start > end) {\r\n        return -1;\r\n    }\r\n    var mid = start + Math.floor((end-start)/2);\r\n    if (target == array[mid]) {\r\n        return mid;\r\n    } else if (target < array[mid]) {\r\n        end = mid-1;\r\n    } else {\r\n        start = mid+1;\r\n    }\r\n    return binarySearch(array, target, start, end);\r\n};\r\n\r\n</code><p>This is a passage paragraph</p><p>This is a passage paragraph</p>"
	}
}